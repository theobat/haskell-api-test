
==================== FINAL INTERFACE ====================
2018-05-04 14:01:57.916488 UTC

interface main:Main [family instance module] 8022
  interface hash: 30f9118d0ae619237d5db2b8d844b830
  ABI hash: aa2907bf948926fcc3631548200fb5ef
  export-list hash: 801751537b3fe8a0d8c29193de951b1e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ff258806160ad95730af68ff67a18906
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: QuickCheck-2.10.1 aeson-1.3.1.0 array-0.5.2.0
                      async-2.1.1.1 attoparsec-0.13.2.2 base-4.10.1.0 base-compat-0.9.3
                      binary-0.8.5.1 bytestring-0.10.8.2 containers-0.5.10.2
                      deepseq-1.4.3.0 dlist-0.8.0.4 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      graphql-api-0.3.0 hashable-1.2.7.0 integer-gmp-1.0.1.0
                      integer-logarithms-1.0.2.1 mtl-2.2.2 pretty-1.1.3.3
                      primitive-0.6.3.0 protolude-0.2.2 random-1.1 scientific-0.3.5.3
                      stm-2.4.5.0 tagged-0.8.5 template-haskell-2.12.0.0 text-1.2.3.0
                      tf-random-0.5 time-1.8.0.2 time-locale-compat-0.1.1.4
                      transformers-0.5.2.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vector-0.12.0.1
orphans: attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         text-1.2.3.0:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder
         stm-2.4.5.0:Control.Monad.STM
         transformers-0.5.2.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: aeson-1.3.1.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         graphql-api-0.3.0:GraphQL.Resolver
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray tagged-0.8.5:Data.Tagged
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.3.1.0:Data.Aeson ae98f244ab33eabfb6cf6b47c5cb906a
import  -/  base-4.10.1.0:Data.Monoid c0108b166e27f747671c7fe4ffb11019
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Generics c2a8006cab1f0055555a6c72607a574b
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  graphql-api-0.3.0:GraphQL 49fbf9824a31beb1e1366029af70987b
import  -/  graphql-api-0.3.0:GraphQL.API aeb1c2a8eb0a0fea6ba5ca4ed1361568
import  -/  graphql-api-0.3.0:GraphQL.Internal.Output 09f6302c06f197dc0c6e79db02c0808a
import  -/  graphql-api-0.3.0:GraphQL.Resolver 9ab2e2a3b1e7624827dc2bde45b152f8
import  -/  graphql-api-0.3.0:GraphQL.Value.FromValue 3c8682f2298eb7acbea1d9bff1a7d53f
import  -/  graphql-api-0.3.0:GraphQL.Value.ToValue 902d6c9d8299dd4e8aa518dbae84c4a7
import  -/  protolude-0.2.2:Protolude 40c409e1ffbff67af991da04d3606855
import  -/  protolude-0.2.2:Protolude.Show 2c4c4f22e2349611e3de4463a9cbe293
import  -/  text-1.2.3.0:Data.Text.Internal 38c8c6a9fa87551555f17379098de405
6d7fff23459431fcfcec4152ccd8609e
  $fDefaultableDogStuff :: GraphQL.API.Defaultable Main.DogStuff
  DFunId
  {- Arity: 1, Strictness: <L,A>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fDefaultableDogStuff_$cdefaultFor
                  `cast`
                (Sym (GraphQL.API.N:Defaultable[0] <Main.DogStuff>_N)) -}
6d7fff23459431fcfcec4152ccd8609e
  $fDefaultableDogStuff1 :: GHC.Base.Maybe Main.DogStuff
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Main.DogStuff
                   Main.$fDefaultableDogStuff2) -}
6d7fff23459431fcfcec4152ccd8609e
  $fDefaultableDogStuff2 :: Main.DogStuff
  {- Strictness: m,
     Unfolding: (Main.DogStuff
                   Main.$fDefaultableDogStuff3
                   GHC.Types.False) -}
723184a723c5e3fd139fc297830acab9
  $fDefaultableDogStuff3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Main.$fDefaultableDogStuff4) -}
f04f1971e9bba8e39ae9d993bb67e407
  $fDefaultableDogStuff4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("shoe"#) -}
6d7fff23459431fcfcec4152ccd8609e
  $fDefaultableDogStuff_$cdefaultFor ::
    GraphQL.Internal.Name.Name -> GHC.Base.Maybe Main.DogStuff
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GraphQL.Internal.Name.Name) ->
                 Main.$fDefaultableDogStuff1) -}
6d7fff23459431fcfcec4152ccd8609e
  $fFromValueDogStuff ::
    GraphQL.Value.FromValue.FromValue Main.DogStuff
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fFromValueDogStuff_$cfromValue
                  `cast`
                (Sym (GraphQL.Value.FromValue.N:FromValue[0] <Main.DogStuff>_N)) -}
a9fc482ec407538f5ec46f21c5e613d3
  $fFromValueDogStuff1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fFromValueDogStuff2) -}
31ed8915351d29442ac204a0f1f987e1
  $fFromValueDogStuff2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_likesTreats"#) -}
2fe4d9fdbef2d25b9fd357639deff11b
  $fFromValueDogStuff3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fFromValueDogStuff4) -}
07613f44a19bdf7deecc9b619425761b
  $fFromValueDogStuff4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_toy"#) -}
78693a18cbc3a407c5f6d45d220aa69c
  $fFromValueDogStuff5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Main.$fFromValueDogStuff6) -}
67d63082cf0537786175b70b81eb06b8
  $fFromValueDogStuff6 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("genericFromValue only works with objects."#) -}
6d7fff23459431fcfcec4152ccd8609e
  $fFromValueDogStuff_$cfromValue ::
    GraphQL.Value.Value' GraphQL.Value.ConstScalar
    -> Data.Either.Either Data.Text.Internal.Text Main.DogStuff
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: GraphQL.Value.Value'
                            GraphQL.Value.ConstScalar) ->
                 case ds of wild {
                   DEFAULT
                   -> case GraphQL.Value.FromValue.$w$swrongType
                             @ Main.DogStuff
                             Main.$fFromValueDogStuff5
                             wild of ww { Unit# ww1 ->
                      Data.Either.Left @ Data.Text.Internal.Text @ Main.DogStuff ww1 }
                   GraphQL.Value.ValueObject' x
                   -> case GraphQL.Value.FromValue.getValue
                             @ Data.Text.Internal.Text
                             @ "_toy"
                             @ 'GHC.Generics.NoSourceUnpackedness
                             @ 'GHC.Generics.NoSourceStrictness
                             @ 'GHC.Generics.DecidedLazy
                             @ GHC.Types.Any
                             GraphQL.Value.FromValue.$fFromValueText_$cfromValue
                               `cast`
                             (Sym (GraphQL.Value.FromValue.N:FromValue[0]
                                       <Data.Text.Internal.Text>_N))
                             Main.$fFromValueDogStuff3
                               `cast`
                             (Trans
                                  (Sym (GHC.TypeLits.N:SSymbol[0] <"_toy">_P))
                                  (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"_toy">_N))
                             x of wild1 {
                        Data.Either.Left l1
                        -> Data.Either.Left @ Data.Text.Internal.Text @ Main.DogStuff l1
                        Data.Either.Right r
                        -> case GraphQL.Value.FromValue.getValue
                                  @ GHC.Types.Bool
                                  @ "_likesTreats"
                                  @ 'GHC.Generics.NoSourceUnpackedness
                                  @ 'GHC.Generics.NoSourceStrictness
                                  @ 'GHC.Generics.DecidedLazy
                                  @ GHC.Types.Any
                                  GraphQL.Value.FromValue.$fFromValueBool_$cfromValue
                                    `cast`
                                  (Sym (GraphQL.Value.FromValue.N:FromValue[0] <GHC.Types.Bool>_N))
                                  Main.$fFromValueDogStuff1
                                    `cast`
                                  (Trans
                                       (Sym (GHC.TypeLits.N:SSymbol[0] <"_likesTreats">_P))
                                       (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"_likesTreats">_N))
                                  x of wild2 {
                             Data.Either.Left l1
                             -> Data.Either.Left @ Data.Text.Internal.Text @ Main.DogStuff l1
                             Data.Either.Right r1
                             -> Data.Either.Right
                                  @ Data.Text.Internal.Text
                                  @ Main.DogStuff
                                  (Main.DogStuff
                                     r `cast`
                                     (Trans
                                          (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "_toy")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.Text.Internal.Text>_R <GHC.Types.Any>_N)
                                          (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <Data.Text.Internal.Text>_R
                                               <GHC.Types.Any>_P))
                                     r1
                                       `cast`
                                     (Trans
                                          (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "_likesTreats")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Types.Bool>_R <GHC.Types.Any>_N)
                                          (GHC.Generics.N:K1[0]
                                               <*>_N
                                               <GHC.Generics.R>_P
                                               <GHC.Types.Bool>_R
                                               <GHC.Types.Any>_P))) } } }) -}
6d7fff23459431fcfcec4152ccd8609e
  $fGenericDogStuff :: GHC.Generics.Generic Main.DogStuff
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.DogStuff
                  Main.$fGenericDogStuff1
                    `cast`
                  (forall (x :: <*>_N).
                   <Main.DogStuff>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "DogStuff" "Main" "main" 'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "DogStuff" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "_toy")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "_likesTreats")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Bool))>_R))
                            (Sub (Sym (Main.Rep_DogStuff[0]))) <x>_N)
                  Main.$fGenericDogStuff_$cto -}
6d7fff23459431fcfcec4152ccd8609e
  $fGenericDogStuff1 ::
    Main.DogStuff
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "DogStuff" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "_toy")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "_likesTreats")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Main.DogStuff) ->
                 case x1 of wild { Main.DogStuff g1 g2 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "_toy")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "_likesTreats")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <*>_N <GHC.Generics.R>_P <Data.Text.Internal.Text>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <*>_N
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "_toy")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1
                                      GHC.Generics.R Data.Text.Internal.Text>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <*>_N
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "_likesTreats")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R) <x>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "DogStuff" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "_toy")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "_likesTreats")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Bool)>_R) <x>_N) }) -}
6d7fff23459431fcfcec4152ccd8609e
  $fGenericDogStuff_$cto ::
    GHC.Generics.Rep Main.DogStuff x -> Main.DogStuff
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Main.DogStuff x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Main.Rep_DogStuff[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "DogStuff" "Main" "main" 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "DogStuff" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "_toy")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "_likesTreats")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Types.Bool))>_R)
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "DogStuff" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "_toy")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "_likesTreats")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Types.Bool)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 Main.DogStuff
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "_toy")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <Data.Text.Internal.Text>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "_likesTreats")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <*>_N <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P)) }) -}
6d7fff23459431fcfcec4152ccd8609e
  $fHasAnnotatedInputTypeDogStuff ::
    GraphQL.API.HasAnnotatedInputType Main.DogStuff
  DFunId
  {- Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fHasAnnotatedInputTypeDogStuff_$cgetAnnotatedInputType
                  `cast`
                (Sym (GraphQL.API.N:HasAnnotatedInputType[0] <Main.DogStuff>_N)) -}
486048dfe08faa42e867eb390d3584b2
  $fHasAnnotatedInputTypeDogStuff1 ::
    Data.Either.Either
      GraphQL.Internal.Name.NameError
      [GraphQL.Internal.Schema.InputObjectFieldDefinition]
  {- Unfolding: (case GraphQL.Internal.Name.nameFromSymbol
                        @ "_toy"
                        Main.$fFromValueDogStuff3
                          `cast`
                        (Trans
                             (Sym (GHC.TypeLits.N:SSymbol[0] <"_toy">_P))
                             (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"_toy">_N)) of wild {
                   Data.Either.Left l1
                   -> Data.Either.Left
                        @ GraphQL.Internal.Name.NameError
                        @ [GraphQL.Internal.Schema.InputObjectFieldDefinition]
                        l1
                   Data.Either.Right r
                   -> case GraphQL.Internal.Name.nameFromSymbol
                             @ "_likesTreats"
                             Main.$fFromValueDogStuff1
                               `cast`
                             (Trans
                                  (Sym (GHC.TypeLits.N:SSymbol[0] <"_likesTreats">_P))
                                  (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"_likesTreats">_N)) of wild1 {
                        Data.Either.Left l1
                        -> Data.Either.Left
                             @ GraphQL.Internal.Name.NameError
                             @ [GraphQL.Internal.Schema.InputObjectFieldDefinition]
                             l1
                        Data.Either.Right r1
                        -> Data.Either.Right
                             @ GraphQL.Internal.Name.NameError
                             @ [GraphQL.Internal.Schema.InputObjectFieldDefinition]
                             (GHC.Types.:
                                @ GraphQL.Internal.Schema.InputObjectFieldDefinition
                                (GraphQL.Internal.Schema.InputObjectFieldDefinition
                                   r
                                   GraphQL.API.$fHasAnnotatedInputTypeText1
                                   (GHC.Base.Nothing @ GraphQL.Internal.Schema.DefaultValue))
                                (GHC.Types.:
                                   @ GraphQL.Internal.Schema.InputObjectFieldDefinition
                                   (GraphQL.Internal.Schema.InputObjectFieldDefinition
                                      r1
                                      GraphQL.API.$fHasAnnotatedInputTypeBool1
                                      (GHC.Base.Nothing @ GraphQL.Internal.Schema.DefaultValue))
                                   (GHC.Types.[]
                                      @ GraphQL.Internal.Schema.InputObjectFieldDefinition))) } }) -}
da01dd95b201227633e474a12a138aad
  $fHasAnnotatedInputTypeDogStuff2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fHasAnnotatedInputTypeDogStuff3) -}
a3346bcf3785ef6ef26e7b15a7acbbfc
  $fHasAnnotatedInputTypeDogStuff3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DogStuff"#) -}
d22064e8e86ab09d854b437156a27d03
  $fHasAnnotatedInputTypeDogStuff_$cgetAnnotatedInputType ::
    Data.Either.Either
      GraphQL.Internal.Name.NameError
      (GraphQL.Internal.Schema.AnnotatedType
         GraphQL.Internal.Schema.InputType)
  {- Unfolding: (case GraphQL.Internal.Name.nameFromSymbol
                        @ "DogStuff"
                        Main.$fHasAnnotatedInputTypeDogStuff2
                          `cast`
                        (Trans
                             (Sym (GHC.TypeLits.N:SSymbol[0] <"DogStuff">_P))
                             (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"DogStuff">_N)) of wild {
                   Data.Either.Left l1
                   -> Data.Either.Left
                        @ GraphQL.Internal.Name.NameError
                        @ (GraphQL.Internal.Schema.AnnotatedType
                             GraphQL.Internal.Schema.InputType)
                        l1
                   Data.Either.Right r
                   -> case Main.$fHasAnnotatedInputTypeDogStuff1 of wild1 {
                        Data.Either.Left x
                        -> Data.Either.Left
                             @ GraphQL.Internal.Name.NameError
                             @ (GraphQL.Internal.Schema.AnnotatedType
                                  GraphQL.Internal.Schema.InputType)
                             x
                        Data.Either.Right y
                        -> Data.Either.Right
                             @ GraphQL.Internal.Name.NameError
                             @ (GraphQL.Internal.Schema.AnnotatedType
                                  GraphQL.Internal.Schema.InputType)
                             (GraphQL.Internal.Schema.TypeNonNull
                                @ GraphQL.Internal.Schema.InputType
                                (GraphQL.Internal.Schema.NonNullTypeNamed
                                   @ GraphQL.Internal.Schema.InputType
                                   (GraphQL.Internal.Schema.DefinedInputType
                                      (GraphQL.Internal.Schema.InputTypeDefinitionObject
                                         (GraphQL.Internal.Schema.InputObjectTypeDefinition
                                            r
                                            y `cast`
                                            (Sym (GraphQL.Internal.Schema.N:NonEmptyList[0]) <GraphQL.Internal.Schema.InputObjectFieldDefinition>_N)))))) } }) -}
6d7fff23459431fcfcec4152ccd8609e
  $fShowDogStuff :: GHC.Show.Show Main.DogStuff
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.DogStuff
                  Main.$fShowDogStuff_$cshowsPrec
                  Main.$fShowDogStuff_$cshow
                  Main.$fShowDogStuff_$cshowList -}
6d7fff23459431fcfcec4152ccd8609e
  $fShowDogStuff1 :: Main.DogStuff -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(U,U,U),1*U)><L,U>,
     Unfolding: (\ (w :: Main.DogStuff) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.DogStuff ww1 ww2 ->
                 Main.$w$cshowsPrec 0# ww1 ww2 w1 }) -}
fa8dc928ffc310433236c916df606b01
  $fShowDogStuff2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowDogStuff3) -}
92abf601140fb227bebd1d8b2b2fbe6c
  $fShowDogStuff3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
3acaa929619c7c475cf2db22c69cda66
  $fShowDogStuff4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_likesTreats = "#) -}
6ad98872255b0d99e009713279880370
  $fShowDogStuff5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_toy = "#) -}
d3f4b2cfbd5ebed79458f403e00d0b02
  $fShowDogStuff6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DogStuff {"#) -}
861b2483b36292934ae1bf3dfc1fa4bf
  $fShowDogStuff7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   GHC.Show.$fShowBool1
                   Main.$fShowDogStuff2) -}
0d1a913b9ed7f2d1c60038f8825ff450
  $fShowDogStuff8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   GHC.Show.$fShowBool3
                   Main.$fShowDogStuff2) -}
6d7fff23459431fcfcec4152ccd8609e
  $fShowDogStuff_$cshow :: Main.DogStuff -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U),1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.DogStuff) ->
                 case w of ww { Main.DogStuff ww1 ww2 -> Main.$w$cshow ww1 ww2 }) -}
6d7fff23459431fcfcec4152ccd8609e
  $fShowDogStuff_$cshowList :: [Main.DogStuff] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Main.DogStuff
                   Main.$fShowDogStuff1) -}
6d7fff23459431fcfcec4152ccd8609e
  $fShowDogStuff_$cshowsPrec ::
    GHC.Types.Int -> Main.DogStuff -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.DogStuff)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.DogStuff ww3 ww4 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 w2 } }) -}
03c4446737a23054815d8815fb7916a8
  $s$fBuildFieldResolvermPlainArgument_$cbuildFieldResolver2 ::
    [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$s$fBuildFieldResolvermPlainArgument_$cbuildFieldResolver3) -}
4d71db7206375222047ccc63d923f6d4
  $s$fBuildFieldResolvermPlainArgument_$cbuildFieldResolver3 ::
    GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dogStuff"#) -}
06b961b5394a5a34b58a2baec89fd647
  $tc'DogStuff :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4866915594669403354##
                   6016673475658813339##
                   Main.$trModule
                   Main.$tc'DogStuff2
                   0#
                   Main.$tc'DogStuff1) -}
b3bd76b21ccfb7c172b833758d422316
  $tc'DogStuff1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
486ee75ef5db73814a151baa2ac6683e
  $tc'DogStuff2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'DogStuff3) -}
6e90661c2a46e0f95b1814a25233ece8
  $tc'DogStuff3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DogStuff"#) -}
7d3eba105de6ce4978934e6c7284d53b
  $tcDogStuff :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   130398073533533499##
                   238597090384893586##
                   Main.$trModule
                   Main.$tcDogStuff1
                   0#
                   GHC.Types.krep$*) -}
42fb283648c5ce70a97f54761ec0a9ed
  $tcDogStuff1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Main.$fHasAnnotatedInputTypeDogStuff3) -}
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
0ab7b727eb4189d4280dff86f49e6fa9
  $w$cshow ::
    Data.Text.Internal.Text -> GHC.Types.Bool -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(U,U,U)><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Text.Internal.Text)
                   (ww1 :: GHC.Types.Bool) ->
                 GHC.CString.unpackAppendCString#
                   Main.$fShowDogStuff6
                   (GHC.CString.unpackAppendCString#
                      Main.$fShowDogStuff5
                      (case Data.Text.Show.$w$cshowsPrec
                              ww
                              (GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    Main.$fShowDogStuff4
                                    (case ww1 of wild {
                                       GHC.Types.False -> Main.$fShowDogStuff8
                                       GHC.Types.True
                                       -> Main.$fShowDogStuff7 }))) of ww2 { (#,#) ww3 ww4 ->
                       GHC.Types.: @ GHC.Types.Char ww3 ww4 }))) -}
6a487bfa34b551019ed5a2c91e0895a2
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(U,U,U)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: GHC.Types.Bool)
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Main.$fShowDogStuff6
                        (GHC.CString.unpackAppendCString#
                           Main.$fShowDogStuff5
                           (case Data.Text.Show.$w$cshowsPrec
                                   ww1
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      GHC.Show.showCommaSpace1
                                      (GHC.CString.unpackAppendCString#
                                         Main.$fShowDogStuff4
                                         (case ww2 of wild1 {
                                            GHC.Types.False
                                            -> GHC.Base.++
                                                 @ GHC.Types.Char
                                                 GHC.Show.$fShowBool3
                                                 (GHC.Base.++
                                                    @ GHC.Types.Char
                                                    Main.$fShowDogStuff2
                                                    w)
                                            GHC.Types.True
                                            -> GHC.Base.++
                                                 @ GHC.Types.Char
                                                 GHC.Show.$fShowBool1
                                                 (GHC.Base.++
                                                    @ GHC.Types.Char
                                                    Main.$fShowDogStuff2
                                                    w) }))) of ww3 { (#,#) ww4 ww5 ->
                            GHC.Types.: @ GHC.Types.Char ww4 ww5 }))
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Main.$fShowDogStuff6
                           (GHC.CString.unpackAppendCString#
                              Main.$fShowDogStuff5
                              (case Data.Text.Show.$w$cshowsPrec
                                      ww1
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         GHC.Show.showCommaSpace1
                                         (GHC.CString.unpackAppendCString#
                                            Main.$fShowDogStuff4
                                            (case ww2 of wild1 {
                                               GHC.Types.False
                                               -> GHC.Base.++
                                                    @ GHC.Types.Char
                                                    GHC.Show.$fShowBool3
                                                    (GHC.Base.++
                                                       @ GHC.Types.Char
                                                       Main.$fShowDogStuff2
                                                       (GHC.Types.:
                                                          @ GHC.Types.Char
                                                          GHC.Show.$fShow(,)2
                                                          w))
                                               GHC.Types.True
                                               -> GHC.Base.++
                                                    @ GHC.Types.Char
                                                    GHC.Show.$fShowBool1
                                                    (GHC.Base.++
                                                       @ GHC.Types.Char
                                                       Main.$fShowDogStuff2
                                                       (GHC.Types.:
                                                          @ GHC.Types.Char
                                                          GHC.Show.$fShow(,)2
                                                          w)) }))) of ww3 { (#,#) ww4 ww5 ->
                               GHC.Types.: @ GHC.Types.Char ww4 ww5 }))) }) -}
6d7fff23459431fcfcec4152ccd8609e
  data DogStuff
    = DogStuff {_toy :: Data.Text.Internal.Text,
                _likesTreats :: GHC.Types.Bool}
2eca1540462e36c604e27baea104610f
  type Query =
    GraphQL.API.Object
      "Query"
      '[]
      '[GraphQL.API.Argument "dogStuff" Main.DogStuff
        GraphQL.API.:> GraphQL.API.Field
                         "description" Data.Text.Internal.Text]
6d7fff23459431fcfcec4152ccd8609e
  axiom Main.Rep_DogStuff::
      GHC.Generics.Rep Main.DogStuff
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "DogStuff" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "DogStuff" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "_toy")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Data.Text.Internal.Text)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "_likesTreats")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Bool)))
6d7fff23459431fcfcec4152ccd8609e
  _likesTreats :: Main.DogStuff -> GHC.Types.Bool
  RecSel Left Main.DogStuff
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.DogStuff) ->
                 case ds of wild { Main.DogStuff ds1 ds2 -> ds2 }) -}
6d7fff23459431fcfcec4152ccd8609e
  _toy :: Main.DogStuff -> Data.Text.Internal.Text
  RecSel Left Main.DogStuff
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.DogStuff) ->
                 case ds of wild { Main.DogStuff ds1 ds2 -> ds1 }) -}
45382869fccdc8575fe927b5bd9b3648
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
529073e95d7e97cca9b9c5c633464b51
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
5510fa2cfc7989247ee295903c8707a0
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
instance GraphQL.API.Defaultable [Main.DogStuff]
  = Main.$fDefaultableDogStuff
instance GraphQL.Value.FromValue.FromValue [Main.DogStuff]
  = Main.$fFromValueDogStuff
instance GHC.Generics.Generic [Main.DogStuff]
  = Main.$fGenericDogStuff
instance GraphQL.API.HasAnnotatedInputType [Main.DogStuff]
  = Main.$fHasAnnotatedInputTypeDogStuff
instance GHC.Show.Show [Main.DogStuff] = Main.$fShowDogStuff
family instance GHC.Generics.Rep [Main.DogStuff]
  = Main.Rep_DogStuff
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False


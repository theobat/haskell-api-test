name: scientific
version: 0.3.5.2
id: scientific-0.3.5.2-HVJVOBlztwf9SidogUAF5g
key: scientific-0.3.5.2-HVJVOBlztwf9SidogUAF5g
license: BSD3
maintainer: Bas van Dijk <v.dijk.bas@gmail.com>
homepage: https://github.com/basvandijk/scientific
synopsis: Numbers represented using scientific notation
description:
    @Data.Scientific@ provides the number type 'Scientific'. Scientific numbers are
    arbitrary precision and space efficient. They are represented using
    <http://en.wikipedia.org/wiki/Scientific_notation scientific notation>.
    The implementation uses a coefficient @c :: 'Integer'@ and a base-10 exponent
    @e :: 'Int'@. A scientific number corresponds to the
    'Fractional' number: @'fromInteger' c * 10 '^^' e@.
    .
    Note that since we're using an 'Int' to represent the exponent these numbers
    aren't truly arbitrary precision. I intend to change the type of the exponent
    to 'Integer' in a future release.
    .
    The main application of 'Scientific' is to be used as the target of parsing
    arbitrary precision numbers coming from an untrusted source. The advantages
    over using 'Rational' for this are that:
    .
    * A 'Scientific' is more efficient to construct. Rational numbers need to be
    constructed using '%' which has to compute the 'gcd' of the 'numerator' and
    'denominator'.
    .
    * 'Scientific' is safe against numbers with huge exponents. For example:
    @1e1000000000 :: 'Rational'@ will fill up all space and crash your
    program. Scientific works as expected:
    .
    > > read "1e1000000000" :: Scientific
    > 1.0e1000000000
    .
    * Also, the space usage of converting scientific numbers with huge exponents to
    @'Integral's@ (like: 'Int') or @'RealFloat's@ (like: 'Double' or 'Float')
    will always be bounded by the target type.
category: Data
author: Bas van Dijk
exposed: True
indefinite: False
exposed-modules:
    Data.ByteString.Builder.Scientific Data.Scientific
    Data.Text.Lazy.Builder.Scientific
hidden-modules: GHC.Integer.Compat Utils
abi: bc3802319291f625c94da07786ff831f
trusted: False
import-dirs: /Users/theophilebatoz/Documents/code/perso/haskell-api-test/.stack-work/install/x86_64-osx/lts-10.4/8.2.2/lib/x86_64-osx-ghc-8.2.2/scientific-0.3.5.2-HVJVOBlztwf9SidogUAF5g
library-dirs: /Users/theophilebatoz/Documents/code/perso/haskell-api-test/.stack-work/install/x86_64-osx/lts-10.4/8.2.2/lib/x86_64-osx-ghc-8.2.2/scientific-0.3.5.2-HVJVOBlztwf9SidogUAF5g
dynamic-library-dirs: /Users/theophilebatoz/Documents/code/perso/haskell-api-test/.stack-work/install/x86_64-osx/lts-10.4/8.2.2/lib/x86_64-osx-ghc-8.2.2
data-dir: /Users/theophilebatoz/Documents/code/perso/haskell-api-test/.stack-work/install/x86_64-osx/lts-10.4/8.2.2/share/x86_64-osx-ghc-8.2.2/scientific-0.3.5.2
hs-libraries: HSscientific-0.3.5.2-HVJVOBlztwf9SidogUAF5g
depends:
    base-4.10.1.0 integer-logarithms-1.0.2-5W3scnnO28EGZ7bLb2MgtH
    deepseq-1.4.3.0 text-1.2.3.0-GmbS1eycnDHLhZQQeWF5x
    hashable-1.2.6.1-7okBlJXxGIfIiKlJqTLEbI
    primitive-0.6.3.0-CXy1O9sQYlI58rn9KQkFyo containers-0.5.10.2
    binary-0.8.5.1 bytestring-0.10.8.2 integer-gmp-1.0.1.0
abi-depends: base-4.10.1.0=e7be07bfa4bb2c944e81ff3b2bb779a9
             integer-logarithms-1.0.2-5W3scnnO28EGZ7bLb2MgtH=b0a715a5559d8f3cc07cfbe83447dc07
             deepseq-1.4.3.0=98ee11e4ec5b71569ee1fcc889ee20ab
             text-1.2.3.0-GmbS1eycnDHLhZQQeWF5x=5b181e6f049f34c49afbf46596abb9a3
             hashable-1.2.6.1-7okBlJXxGIfIiKlJqTLEbI=5d376cc1e36177e9ed5916d1b53eb760
             primitive-0.6.3.0-CXy1O9sQYlI58rn9KQkFyo=c6749b6f9516519305c703393b0c0693
             containers-0.5.10.2=e05bad6c4fbcc0d9d1fe5e555b71fbd3
             binary-0.8.5.1=e7f2eefbe09819155c876ddf0c6f3852
             bytestring-0.10.8.2=da1ce4b2f396553a61f85ea8e8522198
             integer-gmp-1.0.1.0=9c3d9ccbdd7bdea277cdecf74e14db2b
haddock-interfaces: /Users/theophilebatoz/Documents/code/perso/haskell-api-test/.stack-work/install/x86_64-osx/lts-10.4/8.2.2/doc/scientific-0.3.5.2/scientific.haddock
haddock-html: /Users/theophilebatoz/Documents/code/perso/haskell-api-test/.stack-work/install/x86_64-osx/lts-10.4/8.2.2/doc/scientific-0.3.5.2
